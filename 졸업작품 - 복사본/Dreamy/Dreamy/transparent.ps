////////////////////////////////////////////////////////////////////////////////
// Filename: transparent.ps
////////////////////////////////////////////////////////////////////////////////


/////////////
// GLOBALS //
/////////////


Texture2D shaderTexture;
SamplerState SampleType;


//////////////
// TYPEDEFS //
//////////////

// blendAmount값을 저장하기 위한 상수 버퍼를 선언한다.
// blendAmount는 텍스처를 블렌딩할 비율을 저장한다.
// 이 값의 범위는 0과 1사이의 부동 소수점 값이다(텍스처의 u,v좌표가 0~1이기 때문이다.)

cbuffer TransparentBuffer
{
    float blendAmount;
}

struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};




////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////

float4 TransparentPixelShader(PixelInputType input) : SV_TARGET
{
	float4 Color;

    Color = shaderTexture.Sample(SampleType, input.tex);

    //blendAmount값을 이용해 텍스처의 투명도를 설정한다.
    //픽셀의 알파값을 블렌딩할 만큼 설정해주고 나면 나중에 렌더링이 일어날 때 그 알파값을 사용한다.

    if(Color.a != 0.0f)
    {
 
         Color.a = blendAmount;
    }
    else
         Color.a=0.0f;

    
    return Color;
}
