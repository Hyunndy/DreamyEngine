////////////////////////////////////////////////////////////////////////////////
// Filename: texture.ps
////////////////////////////////////////////////////////////////////////////////


/////////////
// GLOBALS //
/////////////

//텍스처 그 자체
//텍스처 자원으로서 모델에 텍스처를 그릴 때 사용된다.
Texture2D shaderTexture;

//샘플러 상태(sampler state)는 도형에 셰이딩이 이루어질 때 어떻게 텍스처의
//픽셀이 씌여지는지 수정할 수 있게한다. (필터임 필터)
//이 샘플러 상태를 Shader클래스에 만들고 연결하여 픽셀 셰이더에서 이를 이용할 수 있게 한다.
SamplerState SampleType;


//////////////
// TYPEDEFS //
//////////////

//정점 셰이더와 픽셀셰이더에서 텍스처 좌표를 나타내기 위해 TEXCOORD0이라는걸 사용한다.
struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////

//픽셀 셰이더가 hlsl의 샘플링 함수를 사용하도록 수정되었다.
// 샘플링 함수는 위에서 정의한 샘플러 상태와 텍스처 좌표를 사용한다.
// 도형의 표면 UV좌표 위치에 들어갈 픽셀 값을 결정하고 반환하기 위해 이 두 변수를 사용한다.
float4 TexturePixelShader(PixelInputType input) : SV_TARGET
{
	float4 textureColor;


    // 도형의 표면 UV좌표 위치에 들어갈 픽셀값을 결정하고 반환하기 위해 두 변수를 사용한다.
    textureColor = shaderTexture.Sample(SampleType, input.tex);

    return textureColor;
}
